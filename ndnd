#!/usr/bin/env python

import dbus, gtk, urllib, urlparse
import dbus.service
from dbus.mainloop.glib import DBusGMainLoop

class MyDBUSService(dbus.service.Object):
    _id = 0
    
    def __init__(self):
        bus_name = dbus.service.BusName('org.freedesktop.Notifications', bus=dbus.SessionBus())
        dbus.service.Object.__init__(self, bus_name, '/org/freedesktop/Notifications')

  
    @dbus.service.method("org.freedesktop.Notifications",
                         in_signature='susssasa{ss}i',
                         out_signature='u')
    def Notify(self, app_name, notification_id, app_icon,
               summary, body, actions, hints, expire_timeout):
        print "--2--"
        msg = "msg: app %s, id %s, icon %s, tout %d\n" % (app_name, notification_id, app_icon, expire_timeout)
        msg += "     sum %s, body %s\n" % (summary, body)
        msg += "     hints" + str(hints.keys())
        print msg
        output.set_label(msg)
        if 'image-data' in hints:
            set_image1(hints['image-data'])
        elif 'image-path' in hints:
            set_image2(hints['image-path'])
        elif app_icon:
            set_image2(app_icon)
        elif 'icon_data' in hints:
            set_image1(hints['icon_data'])
        else:
            icon.set_from_pixbuf(None)
        self._id += 1
        return self._id

  

    @dbus.service.method("org.freedesktop.Notifications", in_signature='', out_signature='ssss')
    def GetServerInformation(self):
        print "GetServerInformation"
        return ("statnot", "http://code.k2h.se", "0.0.2", "1")


def set_image1(data):
    print "set_image1"
    w = data[0]
    h = data[1]
    r = data[2]
    a = bool(data[3])
    b = data[4]
    c = data[5]
    d = data[6]
    d = "".join(chr(b) for b in d)
    pb = gtk.gdk.pixbuf_new_from_data(d,
        gtk.gdk.COLORSPACE_RGB, a, b, w, h, r)
    icon.set_from_pixbuf(pb)


def set_image2(app_icon):
    icon_theme = gtk.icon_theme_get_default()
    try:
        pb = icon_theme.load_icon(app_icon, 24, 0)
        icon.set_from_pixbuf(pb)
        return
    except Exception as e:
        print "can't load icon", e

    fname = urllib.unquote(urlparse.urlparse(app_icon).path)
    try:
        pb = gtk.gdk.pixbuf_new_from_file_at_size(fname, 24, 24)
        icon.set_from_pixbuf(pb)
        return
    except Exception as e:
        print "can't load icon", e

    # get broken icon
    icon.set_from_icon_name(app_icon, gtk.ICON_SIZE_SMALL_TOOLBAR)

    
    
DBusGMainLoop(set_as_default=True)
myservice = MyDBUSService()

win = gtk.Window()
win.connect("delete_event", lambda w,e:gtk.main_quit())
vbox = gtk.VBox()
icon = gtk.Image()
vbox.pack_start(icon, False, True, 0)
output = gtk.Label("dddd")
vbox.pack_start(output, True, True, 0)
win.add(vbox)
win.show_all()
gtk.main()


# Test with
# notify-send -a "sababa" --icon=battery-good  \
#    Test "Battery is normal" -h string:vasya:34 -u low
